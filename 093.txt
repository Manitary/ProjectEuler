digits:={1..9};
op:={"+","-","*","/"};
op:=car<op,op,op>;
order:={[1,1,1],[1,2,1],[2,1,1],[2,2,1],[3,2,1]};
max:=1;
best:={};
for dig in Subsets(digits,4) do
	list:={};
	for s in Permutations(dig) do
		d:=[IntegerToString(i):i in s];
		for list_op in op do
			for ord in order do
				o:=[list_op[i]:i in [1..3]];
				num:=d;
				for w in ord do
					if o[w] eq "/" and num[w+1] eq "0" then
						break;
					end if;
					num[w]:=Sprint(eval num[w] * o[w] * num[w+1]);
					Remove(~num,w+1);
					Remove(~o,w);
				end for;
				n:=eval num[1];
				if IsCoercible(Integers(),n) and n gt 0 then
					Include(~list,Integers()!n);
				end if;
			end for;
		end for;
	end for;
	list:=Sort(SetToSequence(list));
	i:=0;
	repeat
		i+:=1;
	until i gt #list or list[i] ne i;
	m:=i-1;
	if m gt max then
		max:=m;
		best:=dig;
	end if;
end for;
Seqint(Reverse(Sort(SetToSequence(best))));