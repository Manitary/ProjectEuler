function N(k)
    r:=k*SquareRoot(2)/8;
    if r lt SquareRoot(2) then
        return 0;
    end if;
    s:=k^2 div 32;
    t:=1+4*Floor(r);
    for i in [1..Floor(r)] do
        if s gt i^2 then
            t+:=4*Iroot(s-i^2,2);
        end if;
    end for;
    return t;
end function;

function S(n)
    if n eq 0 then
        return 0;
    end if;
    F:=Factorization(n);
    t:=1;
    for f in F do
        if f[1] mod 4 eq 1 then
            t*:=f[2]+1;
        elif f[1] mod 4 eq 3 then
            t*:=f[2] mod 2 eq 0 select 1 else 0;
        end if;
    end for;
    return 4*t;
end function;

r:=16;
"lines:",2 * r * (3*r/4);
"disc:",N(r);
"circle:",S((r^2) div 32);
"diagonal:",(r/4 - 1);
"tot =",2 * r * (3*r/4) + N(r) - S((r^2) div 32) - (r/4 - 1);