N:=17*169*125*2;

procedure count(N,M,prime_list,~tot)
	to_check:=Sort(SetToSequence(SequenceToSet(PrimesUpTo(Floor(N/M))) meet SequenceToSet(prime_list)));
	for p in to_check do
		if p mod 4 eq 1 then
			Exclude(~to_check,p);
		end if;
	end for;
	tot+:=M;
	if #to_check ge 1 then
		for q in [1..#to_check] do
			max_p:=to_check[#to_check];
			Prune(~to_check);
			for i in [1..Floor(Log(max_p,Floor(N/M)))] do
				count(N,M*max_p^i,to_check,~tot);
			end for;
		end for;
	end if;
end procedure;

tot:=0;
for p3 in PrimesUpTo(Floor(Root(N,3))) do
	if p3 mod 4 eq 1 then
		N1:=Floor(N/p3^3);
		for p2 in PrimesUpTo(Floor(Root(N1,2))) do
			if p2 ne p3 and p2 mod 4 eq 1 then
				N2:=Floor(N1/p2^2);
				for p1 in PrimesUpTo(N2) do
					if p1 ne p2 and p1 ne p3 and p1 mod 4 eq 1 then
						K:=p1*p2^2*p3^3;
						p1,p2,p3;
						count(N,K,PrimesUpTo(Floor(N/K)),~tot);
					end if;
				end for;
			end if;
		end for;
	end if;
end for;
tot;
